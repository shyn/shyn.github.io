<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Complex Standalone</title>
    <link>http://dengx.in/index.xml</link>
    <description>Recent content on Complex Standalone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-ch</language>
    <lastBuildDate>Tue, 28 Feb 2017 09:20:06 +0800</lastBuildDate>
    <atom:link href="http://dengx.in/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>部署 google bbr</title>
      <link>http://dengx.in/post/deploy-google-bbr/</link>
      <pubDate>Tue, 28 Feb 2017 09:20:06 +0800</pubDate>
      
      <guid>http://dengx.in/post/deploy-google-bbr/</guid>
      <description>

&lt;p&gt;试了一下 google 的 bbr TCP 拥堵算法，好像很厉害，速度快了不少，建议不要再使用 kcp 等暴力发包的加速方案，会让网络大环境变差。bbr 是单边加速，仅需设置一下服务器端即可。&lt;/p&gt;

&lt;p&gt;其实 bbr 已经加入 4.9 以上的 linux 内核，所以无非是升级到最新内核，设置一下默认使用 bbr 就可以了。&lt;/p&gt;

&lt;p&gt;下面以 vultr 的 CentOS 7 x64 的实例来示范，其他发行版主要是升级内核方式不同。&lt;/p&gt;

&lt;h2 id=&#34;一-升级内核&#34;&gt;一、升级内核&lt;/h2&gt;

&lt;p&gt;查看当前内核版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;uname -r
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;输出结果可能是这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;3.10.0-514.2.2.el7.x86_64
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;表明当前内核版本 3.10&lt;/p&gt;

&lt;p&gt;shell 中输入一下指令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
sudo yum --enablerepo&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;elrepo-kernel install kernel-ml -y
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;检查一下是否升级成功：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;rpm -qa &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; grep kernel
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;kernel-ml-4.9.0-1.el7.elrepo.x86_64
kernel-3.10.0-514.el7.x86_64
kernel-tools-libs-3.10.0-514.2.2.el7.x86_64
kernel-tools-3.10.0-514.2.2.el7.x86_64
kernel-3.10.0-514.2.2.el7.x86_64
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;有第一行的 4.9.0 甚至 4.10 就说明成功了。
设置一下，重启。&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;grub2-set-default 0
reboot
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;二-开启-bbr&#34;&gt;二、开启 bbr&lt;/h2&gt;

&lt;p&gt;查看一下内核：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;uname -r
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;查看一下 bbr 有没有：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo sysctl net.ipv4.tcp_available_congestion_control
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;输出应该是这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;net.ipv4.tcp_available_congestion_control &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; bbr cubic reno
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;设置一下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo sysctl net.ipv4.tcp_congestion_control&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;bbr
sudo sysctl net.core.default_qdisc&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;fq
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样应该就 OK 啦！可以享受 google 黑科技了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>http://dengx.in/resume-v1/</link>
      <pubDate>Mon, 20 Feb 2017 20:10:18 +0800</pubDate>
      
      <guid>http://dengx.in/resume-v1/</guid>
      <description>

&lt;h2 id=&#34;基本信息&#34;&gt;基本信息&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;姓名：邓新&lt;/li&gt;
&lt;li&gt;性别：男&lt;/li&gt;
&lt;li&gt;出生： 1989 年 10 月&lt;/li&gt;
&lt;li&gt;邮箱：deepwind@protonmail.com, theone.deng@gmail.com&lt;/li&gt;
&lt;li&gt;blog: dengx.in&lt;/li&gt;
&lt;li&gt;github: github.com/shyn&lt;/li&gt;
&lt;li&gt;twitter: iDXYe&lt;/li&gt;
&lt;li&gt;电话: 18671171025&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;教育经历&#34;&gt;教育经历&lt;/h2&gt;

&lt;p&gt;2008～2012 北京师范大学物理学系&lt;/p&gt;

&lt;h2 id=&#34;工作经验&#34;&gt;工作经验&lt;/h2&gt;

&lt;p&gt;高中物理教育 4 年半，业余做编程开发，热爱 coding&lt;/p&gt;

&lt;h2 id=&#34;项目经验&#34;&gt;项目经验&lt;/h2&gt;

&lt;h3 id=&#34;题库系统&#34;&gt;题库系统&lt;/h3&gt;

&lt;p&gt;为满足工作需要，弥补现有题库的不足，使用 python 从网络爬取题目，存储在 mongodb，并使用 flask 实现了自己的题库系统，前端使用 Bootstrap，系统实现了基于题库的 CRUD、授权访问，使用 Mongodb 作为数据库持久化存储，Redis 做缓存系统，elasticsearch 做了全文搜索功能；设计了相似题目算法来进行去重和高效发现相似题目；&lt;/p&gt;

&lt;h2 id=&#34;技能&#34;&gt;技能&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;主力语言为 python，能熟练使用 python 解决问题，熟悉常用系统库及第三方库的使用&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;熟悉 flask 的使用，能运用 flask 快速完成常见业务&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 python 设计基本爬虫收集信息，能使用 scrapy 框架编写复杂分布式爬虫&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 python 进行数据分析，能应用基本的机器学习方法进行数据挖掘&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;熟悉 golang, 能教流畅读写代码&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;熟悉常用数据库如 mysql、mongodb、redis 的基本使用和维护&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;熟悉 HTTP 的基本原理，可以熟练实现 RESTful API&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;熟悉 HTML/CSS/JavaScript，经常捣腾各种眼花缭乱的 web 新技术&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;非常熟练的使用 google、官方文档、stackoverflow、V2EX、知乎来解决问题&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;比较好的数理基础，掌握微积分、数理统计、线性代数、数学物理方法的基本应用&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;熟悉 linux 环境，能进行基本日常使用和维护&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;熟悉 git、vim 的日常使用&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;个人描述&#34;&gt;个人描述&lt;/h2&gt;

&lt;p&gt;热爱编程，喜欢思考，喜欢 geek、nerd 相关事物，喜欢尝试各种新技术，良好的自学能力，善于归纳总结，把握事物本质，敬畏于各个领域的各种 pattern，希望挑战自己，做全职开发。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>http://dengx.in/resume/</link>
      <pubDate>Mon, 20 Feb 2017 20:10:18 +0800</pubDate>
      
      <guid>http://dengx.in/resume/</guid>
      <description>

&lt;h2 id=&#34;基本信息&#34;&gt;基本信息&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;姓名：邓新&lt;/li&gt;
&lt;li&gt;性别：男&lt;/li&gt;
&lt;li&gt;出生：1989 年 10 月&lt;/li&gt;
&lt;li&gt;邮箱：deepwind@protonmail.com, theone.deng@gmail.com&lt;/li&gt;
&lt;li&gt;twitter: @iDXYe&lt;/li&gt;
&lt;li&gt;电话: 18671171025&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;求职意向&#34;&gt;求职意向&lt;/h2&gt;

&lt;p&gt;python 开发&lt;/p&gt;

&lt;h2 id=&#34;自我描述&#34;&gt;自我描述&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;熟悉常见技术的基本原理，热爱互联网和技术，喜欢思考；&lt;/li&gt;
&lt;li&gt;喜欢 geek、nerd 相关事物，喜欢尝试各种新技术；&lt;/li&gt;
&lt;li&gt;善于归纳总结，把握事物本质，敬畏于各个领域的各种 pattern；&lt;/li&gt;
&lt;li&gt;能熟练使用 python 解决问题；&lt;/li&gt;
&lt;li&gt;熟悉 MVC、RESTful，日常高效使用 Mac 工作，熟悉 linux 的使用和维护，熟悉 git、vim，熟练使用常见数据库如 MySQL、Mongodb.&lt;/li&gt;
&lt;li&gt;熟悉 C 和 go 语言的程序；&lt;/li&gt;
&lt;li&gt;良好的编程基础和数理知识，学习能力强。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;教育经历&#34;&gt;教育经历&lt;/h2&gt;

&lt;p&gt;2008～2012 北京师范大学物理学系&lt;/p&gt;

&lt;h2 id=&#34;工作经验&#34;&gt;工作经验&lt;/h2&gt;

&lt;p&gt;2012 年 8 月 ~ 2017 年 1 月  东风高级中学（市直属示范高中）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;进行高中物理教学，班级管理；&lt;/li&gt;
&lt;li&gt;开发教学辅助系统，建立了内部使用的题库、组卷工具；&lt;/li&gt;
&lt;li&gt;学校的免费 IT guy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;项目经验&#34;&gt;项目经验&lt;/h2&gt;

&lt;h3 id=&#34;题库系统-个人全栈开发&#34;&gt;题库系统（个人全栈开发）&lt;/h3&gt;

&lt;p&gt;内容：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用 bootstrap 设计了前端页面，利用 cookie 和 Web Storage 配合后端设计了试题篮；&lt;/li&gt;
&lt;li&gt;后端主要使用 flask 开发，使用 mongodb 做数据持久化存储；&lt;/li&gt;
&lt;li&gt;使用 elasticsearch 做了题目的全文搜索功能；&lt;/li&gt;
&lt;li&gt;解决了几十万小图片的服务器端存储问题；&lt;/li&gt;
&lt;li&gt;基本的性能优化，如创建 mongodb 索引，数据分页，gunicorn 做应用服务器并开启异步模式，nginx 反向代理和静态资源托管，reids 做内存缓存和消息存储，Celery 做任务调度；&lt;/li&gt;
&lt;li&gt;除了基于题目的增删改查，还是实现了标签聚合，组卷功能；&lt;/li&gt;
&lt;li&gt;使用结巴分词、朴素贝叶斯分类和感知哈希算法实现了「相似题目」来进行去重和高效发现相似题目；&lt;/li&gt;
&lt;li&gt;基于相似题目开发了基本的推荐系统和智能组卷功能；&lt;/li&gt;
&lt;li&gt;设计了 RESTful 的 API，吞吐 json 数据， 满足未来的移动 App 开发等需求；&lt;/li&gt;
&lt;li&gt;使用 python 脚本爬取 10 万条目，作为初始数据。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;收获：迅速使用常用技术栈完成业务，学会了如何设计产品，如何进行迭代开发，使用 git 进行项目管理。&lt;/p&gt;

&lt;h2 id=&#34;技能&#34;&gt;技能&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;熟练使用 python 解决问题，熟悉常用系统库及第三方库的使用&lt;/li&gt;
&lt;li&gt;熟悉 flask 的使用，能运用 flask 快速完成常见业务&lt;/li&gt;
&lt;li&gt;使用 python 设计基本爬虫收集信息，能使用 scrapy 框架编写复杂分布式爬虫&lt;/li&gt;
&lt;li&gt;使用 python 进行数据分析，能应用基本的机器学习方法进行数据挖掘&lt;/li&gt;
&lt;li&gt;熟悉 golang, 能教流畅读写代码&lt;/li&gt;
&lt;li&gt;熟悉常用数据库如 mysql、mongodb、redis 的基本使用和维护&lt;/li&gt;
&lt;li&gt;熟悉 HTTP 的基本原理，可以熟练实现 RESTful API&lt;/li&gt;
&lt;li&gt;熟悉 HTML/CSS/JavaScript，经常捣腾各种眼花缭乱的 web 新技术&lt;/li&gt;
&lt;li&gt;非常熟练的使用 google、官方文档、stackoverflow、V2EX、知乎来解决问题&lt;/li&gt;
&lt;li&gt;良好的数理基础，熟悉微积分、数理统计、线性代数、数学物理方法的基本应用&lt;/li&gt;
&lt;li&gt;熟悉 linux 环境，能进行基本日常使用和维护&lt;/li&gt;
&lt;li&gt;熟悉 git、vim 的日常使用&lt;/li&gt;
&lt;li&gt;英语六级，熟练阅读英文资料&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>拥抱 Docker</title>
      <link>http://dengx.in/post/use-docker/</link>
      <pubDate>Tue, 23 Aug 2016 10:01:08 +0800</pubDate>
      
      <guid>http://dengx.in/post/use-docker/</guid>
      <description>

&lt;p&gt;一直以来，服务器的部署都很让我头疼，每次都要进行一堆配置，繁琐重复的劳动太多，自己时间有限，加上到 VPS 的网络不是那么稳定，很多自动化部署和运维的工具都没尝试，不过现在看来也没有什么必要了，因为知道了 Docker。&lt;/p&gt;

&lt;p&gt;真正想用进一步了解和使用它其实是听了&lt;/p&gt;

&lt;h1 id=&#34;安装-docker&#34;&gt;安装 Docker&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://docker.com&#34;&gt;Docker 官方文档&lt;/a&gt;详尽地列出了各个系统下的 Docker 安装说明，不多说了。&lt;/p&gt;

&lt;p&gt;补充一下： Windows/Mac 用户，推荐安装 Docker for Window/Mac，而不是 Docker Toolbox。前者可以直接利用宿主系统的虚拟化机制，拥有更好的性能；后者需要借助 VirtualBox 运行的 Linux 虚拟机，你可能会很不爽。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>15 分钟创建安全的个人 shadowsocks 服务</title>
      <link>http://dengx.in/post/setup-a-secure-shadowsocks-server-in-15-minutes/</link>
      <pubDate>Sat, 04 Jun 2016 20:18:35 +0800</pubDate>
      
      <guid>http://dengx.in/post/setup-a-secure-shadowsocks-server-in-15-minutes/</guid>
      <description>

&lt;p&gt;这年头，科学上网是中国网民的必修课，然后并不是每个人都懂技术，虽然网上介绍这方面的很多，但是多数没有注重基本的安全设置，这样的话，就算小白学着你的方法一步一步配置成功了，但很快也会变成肉鸡吧，用户的所有上网行为也都暴露给了骇客，那样的话还不如自己买一个帐号放心。
网上卖 shadowsocks 帐号的很多，各种论坛、群里都能见到这种二道贩子，但你觉得他安全吗？其实一台 5 美元的服务器就可以创建很多的帐号，服务器流量、带宽都有限，超售是很普遍的，这样服务质量不能得到保障。对于那些大型卖家，也不能放心，有的网站底部都显示已经在公安部备案了。况且大量用户的话，生意还能做下去，只有一个原因。为了让自己翻的放心一些，要么去买那些比较贵的、可靠的服务商（可能你也不知道有哪些），那么呢，其实你可以自己买服务器搭建，一点都没有想象中的那么麻烦！而且一台服务器可以设置很多帐号，可以多人合用，流量都是绝对够用的，完全不用考虑。你只需要一个月花 5 美元，已经现在别要害怕、别怕麻烦、耐心的最好设置就可以了！&lt;/p&gt;

&lt;h2 id=&#34;购买-digitalocean-服务器&#34;&gt;购买 digitalocean 服务器&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>nginx.conf</title>
      <link>http://dengx.in/post/nginx.conf/</link>
      <pubDate>Sun, 30 Aug 2015 22:22:11 +0800</pubDate>
      
      <guid>http://dengx.in/post/nginx.conf/</guid>
      <description>&lt;p&gt;nginx is just for geeks. High performance with easy setup.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>vim101</title>
      <link>http://dengx.in/post/vim101/</link>
      <pubDate>Thu, 13 Aug 2015 01:04:42 +0800</pubDate>
      
      <guid>http://dengx.in/post/vim101/</guid>
      <description></description>
    </item>
    
    <item>
      <title>被猫抓伤怎么办</title>
      <link>http://dengx.in/post/my-cat-bite-me/</link>
      <pubDate>Sun, 28 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://dengx.in/post/my-cat-bite-me/</guid>
      <description>&lt;p&gt;16天前，我开始养猫。&lt;/p&gt;

&lt;p&gt;他叫萌萌，不到三个月，很快就和我熟了。然后打闹起来各种抓、咬。那个小爪子真是锋利啊，感觉他对自己的爪子特别骄傲，借着利抓爬上爬下的。晚上喜欢钻我被窝，但又不好好睡觉，继续挠我。&lt;/p&gt;

&lt;p&gt;于是我身上很快多了很多口子，手上有次见血了。不得已把他带到宠物医院做了 Spa，修了指甲，乖多了。&lt;/p&gt;

&lt;p&gt;回来看着伤口觉得自己要不要打针呢？结果办公室同事一致认为我应该去打，让我赶快，过了24小时就不好了，而且疾病防控中心马上就下班了。&lt;/p&gt;

&lt;p&gt;我知道狂犬病死亡率死亡率几乎100%. 突然有点死神临近的感觉，我可不想死哦，但我觉得自己运气没那么差吧。再说，感觉好夸张，难道被猫抓了就得打狂犬病育苗？农村里被猫抓伤很常见啊，是不是有些恐狂了？是不是医院只是借此赚钱而已？&lt;/p&gt;

&lt;p&gt;这时候拖延症和死理性双双发病。&lt;/p&gt;

&lt;p&gt;网上恐狂的也很多。但稍微看下维基百科，也能知道不必惊慌好么，基本是不用打的。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;狂犬病病毒进入人体后首先侵染肌细胞或者皮肤细胞，并在其中渡过潜伏期，而后通过肌细胞、皮肤细胞和神经细胞之间的乙酰胆碱受体进入神经细胞，沿神经细胞的轴突缓慢上行，上行到脊髓，进而入脑，并不沿血液扩散。病毒在脑内感染海马区、小脑、脑干乃至整个中枢神经系统，并在灰质大量复制，沿周围神经下行到达唾液腺、角膜、鼻黏膜、肺、皮肤等部位。狂犬病病毒对宿主主要的损害来自内基小体（Negri bodies），即为其废弃的蛋白质外壳在细胞内聚集形成的嗜酸性颗粒，内基小体广泛分布在患者的中枢神经细胞中，也是本疾病实验室诊断的一个指标。&lt;/p&gt;

&lt;p&gt;狂犬病病毒在周围神经组织里的平均移动速率是3mm/h，上行到中枢神经组织（脑-脊髓）后可在一天内繁殖扩散到整个中枢神经组织内。因此，伤口离脑-脊髓越远，潜伏期就越长，疫苗就越有可能及时生效从而有效预防狂犬病发作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以上是引自维基百科的病理。&lt;/p&gt;

&lt;p&gt;看到了么，「不沿血液扩散」，沿神经细胞往大脑里传播，当它到达脑组织之后，就发病，发病后「下行到达唾液腺、角膜、鼻黏膜、肺、皮肤等部位」，才具有传染性。这很重要！也就是说&lt;strong&gt;只有发病的感染者才具有传染性！&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;潜伏期中感染者没有任何症状，也不具传染性。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当感染者发病后，症状是比较明显的，我家喵就是闹了点儿嘛，根本不用担心。再说狂犬病毒主要是通过狗传播的，猫的比例是很小的。就算被确定健康的狗咬了，也就打点儿破伤风就行。&lt;/p&gt;

&lt;p&gt;那被猫抓伤了怎么办呢？如果是你家爱猫，基本都是正常的，没有携带病毒，你最多用盐水洗下伤口就行，像我连洗都懒得洗。为了防止你家喵被外面的野猫或者僵尸什么的咬伤，从而携带病毒，早点带它去打育苗吧。如果是被外面发癫的野猫咬伤，为了生命安全，还是准备挨针吧。&lt;/p&gt;

&lt;p&gt;所以，恐狂的各位，该吃药了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://zh.wikipedia.org/wiki/%E7%8B%82%E7%8A%AC%E7%97%85&#34;&gt;http://zh.wikipedia.org/wiki/%E7%8B%82%E7%8A%AC%E7%97%85&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>